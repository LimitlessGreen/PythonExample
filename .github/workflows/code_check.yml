name: Python Code Quality and Compatibility Check
on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  code-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Show files
      run: ls -la

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        if [ -f Pipfile ]; then pipenv install; fi
        pipenv install flake8
      shell: bash
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      shell: bash
    
    - name: Lint with black
      uses: psf/black@stable

    - name: Run linter and comment PR
      uses: matias-martini/flake8-pr-comments-action@main
      if: github.event_name == 'pull_request'
      with:
        github_token: ${{ github.token }}

  run-check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.12.3"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        if [ -f Pipfile ]; then pipenv install; fi
        pipenv install pytest
      shell: bash
    
    - name: Run code
      run: pipenv run python run.py test.txt
      shell: bash
